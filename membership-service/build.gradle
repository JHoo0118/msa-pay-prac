plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
//    id 'com.palantir.docker' version '0.25.0'
}

group = 'com.msa.pay'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Hibernate Validator (Jakarta Bean Validation 구현체)
    implementation 'org.hibernate.validator:hibernate-validator:8.0.0.Final'
    implementation 'jakarta.validation:jakarta.validation-api:3.1.0'

    // implementation group: 'org.axonframework', name: 'axon-configuration', version: "$axonVersion"
    // implementation group: 'org.axonframework', name: 'axon-spring-boot-starter', version: "$axonVersion"

    // swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

//    implementation project(path: ':common')

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'
}

tasks.named('test') {
    useJUnitPlatform()
}

//docker {
//    println(tasks.bootJar.outputs.files)
//    name rootProject.name + '-' + project.name + ":" + version
//    dockerfile file('../Dockerfile')
//    files tasks.bootJar.outputs.files
//    buildArgs(['JAR_FILE': tasks.bootJar.outputs.files.singleFile.name])
//}